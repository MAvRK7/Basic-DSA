/ C program for building Heap from Array

#include <stdio.h>


void swap(int *a, int *b)
{
	int tmp = *a;
	*a = *b;
	*b = tmp;
}

void heapify(int arr[], int N, int i)
{
	int largest = i; 
	int l = 2 * i + 1; 
	int r = 2 * i + 2;  

	// If left child is larger than root
	if (l < N && arr[l] > arr[largest])
		largest = l;

	// If right child is larger than largest so far
	if (r < N && arr[r] > arr[largest])
		largest = r;

	
	if (largest != i) {
		swap(&arr[i], &arr[largest]);

		
		heapify(arr, N, largest);
	}
}

//  Max-Heap from the given array
void buildHeap(int arr[], int N)
{
	// Index of the last non-leaf node is StartIdx
	int startIdx = (N / 2) - 1;


	for (int i = startIdx; i >= 0; i--) {
		heapify(arr, N, i);
	}
}


void printHeap(int arr[], int N)
{
	printf("Array representation of Heap is:\n");

	for (int i = 0; i < N; ++i)
		printf("%d ",arr[i]);
	printf("\n");
}


int main()
{
	
	int arr[] = {203, 223, 11, 92, 12, 10, 6, 17, 29, 39, 123, 45, 54, 34, 43};

	int N = sizeof(arr) / sizeof(arr[0]);

	
	buildHeap(arr, N);
	printHeap(arr, N);



	return 0;
}
